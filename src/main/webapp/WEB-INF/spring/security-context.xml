<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<!--  
	시큐리티 3단계 : 로그인을 JDBC연동으로 커스터마이징 하기
		jdbc-user-service 
			data-source-ref : 데이터베이스 연결을 나타내는
				dataSource로 해당 빈은 반드시 root-context에서
				기술해야 한다.
			role-prefix : "ROLE_"와 같은 권한명앞에 붙는 접두어를
				지정한다. 만약 해당 항목을 "ROLE_"로 지정하면 테이블에서는
				"USER"와 같이 입력해야한다. 
			users-by-username-query : 아이디를 이용하여 사용자 정보를
				가져오는 쿼리문을 작성한다.
			authorities-by-username-query : 아이디를 이용하여
				권한정보를 가져오는 쿼리문을 작성한다.
	-->
	<http pattern="/android/**" security="none" />
	<http>
		<intercept-url pattern="/member/login"
			access="permitAll"/>
		<intercept-url pattern="/admin"
			access="permitAll"/>
		<intercept-url pattern="/multiBoard/product"
			access="hasAnyRole('sitter, parents')"/>
		<intercept-url pattern="/admin/**"
			access="hasRole('admin')"/>
		<intercept-url pattern="/**"
			access="permitAll"/>
			
		<form-login
			login-page="/member/login"
			default-target-url="/member/LoginAction"
			authentication-failure-url="/member/login?error"
			login-processing-url="/loginAction"
			always-use-default-target="true"
			username-parameter="id"
			password-parameter="pass"
		/>
		<logout
			logout-url="/member/logout"
			logout-success-url="/main/main"/>
		<access-denied-handler
			error-page="/admin/denided"/>
	</http>
	<!-- 각 권한을 획득하기 위한 설정 부분 -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service 
			data-source-ref="dataSource"
			role-prefix="ROLE_"
			users-by-username-query="SELECT
				id, pw, enabled
				FROM member WHERE id=?"
			authorities-by-username-query="SELECT
				id, flag
				FROM member WHERE id=?"
			/>
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>
