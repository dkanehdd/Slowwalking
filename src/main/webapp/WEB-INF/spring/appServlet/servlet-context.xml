<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd"
	>

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/images/**" location="/resources/images" />
	
	
	<resources mapping="/css/**" location="/resources/css/" /> 
	<resources mapping="/js/**" location="/resources/js/" /> 
	<resources mapping="/img/**" location="/resources/img/" /> 
	<resources mapping="/font/**" location="/resources/font/" />
	<resources mapping="/scss/**" location="/resources/scss/" />
	<resources mapping="/vendor/**" location="/resources/vendor/" />   	
	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 스케쥴러파일이 존재하는 패키지 설정 -->	
	
	<context:component-scan base-package="com.kosmo.slowwalking" />
	<context:component-scan base-package="admin" />
	<context:component-scan base-package="android" />
	<context:component-scan base-package="scheduler" />
		<task:scheduler id="jobScheduler" pool-size="10" />
		<task:annotation-driven scheduler="jobScheduler" />
	<!-- DB연결을 위한 데이터소스 빈 생성 -->	
	<beans:bean name="dataSource" 
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
		<beans:property name="username" value="slowwalking" />
		<beans:property name="password" value="1234" />
	</beans:bean>
	<!-- Mybatis 빈 생성 
		DAO파일설정을 위해 mapperLocations에 *를 사용한다.
	-->
	<beans:bean id="sqlSessionFactory" 
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapperLocations"
			value="classpath:slowwalking/mapper/*.xml"/>
	</beans:bean>
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"/>
	</beans:bean>
	
	
	<!-- 파일업로드를 위한 빈 생성 -->
	<beans:bean id="multipartResolver" 
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10000000"/>
	</beans:bean>
	<!-- 파일다운로드 빈 생성 -->
	<beans:bean id="fileDownloadView" class="common.FileDownLoadView"/>
	<!-- 파일다운로드시 상단의 ViewResolver보다 먼저 동작하도록 우선순위(order)를
	높게 설정한다. 따라서 파일 다운로드시 뷰가 화면에 출력되지 않도록한다. -->
	<beans:bean id="fileViewResolver"
	class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"/>
	</beans:bean>
	
	
	
	
</beans:beans>
